import{_ as e,M as o,p,q as c,R as n,t as a,N as t,a1 as l}from"./framework-b7c41258.js";const u={},i=n("h1",{id:"vue-router里实现过渡效果",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vue-router里实现过渡效果","aria-hidden":"true"},"#"),a(" vue-router里实现过渡效果")],-1),r={href:"https://next.router.vuejs.org/zh/api/index.html#router-link-%E7%9A%84-v-slot",target:"_blank",rel:"noopener noreferrer"},d={href:"https://v3.cn.vuejs.org/guide/transitions-enterleave.html#%E5%8D%95%E5%85%83%E7%B4%A0-%E7%BB%84%E4%BB%B6%E7%9A%84%E8%BF%87%E6%B8%A1",target:"_blank",rel:"noopener noreferrer"},k=l(`<div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span>
    <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>user<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">v-slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ Component }<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transition</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>slide<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>component</span> <span class="token attr-name">:is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Component<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:singer</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectedSinger<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transition</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>Component 是固定写法</p><p>name=&quot;slide&quot; 这是过渡效果的cass名</p></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>如果要指定渲染的路由，可以在router-view里加上name</p><p>例子中的name=&#39;user&#39; 表明只能渲染user对应的组件</p></div>`,3);function v(m,g){const s=o("ExternalLinkIcon");return p(),c("div",null,[i,n("p",null,[n("a",r,[a("router-view的 v-slot"),t(s)])]),n("p",null,[n("a",d,[a("过渡效果"),t(s)])]),k])}const h=e(u,[["render",v],["__file","01.html.vue"]]);export{h as default};
