import{_ as l,M as i,p as o,q as r,R as t,t as e,N as s,a1 as a}from"./framework-b7c41258.js";const d={},c=t("h1",{id:"git",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#git","aria-hidden":"true"},"#"),e(" Git")],-1),p={href:"https://git-scm.com/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://learngitbranching.js.org/?locale=zh_CN",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/git/git",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/git-for-windows/git",target:"_blank",rel:"noopener noreferrer"},f={href:"https://npm.taobao.org/mirrors/git-for-windows/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/maomao1996/daily-notes/issues/7",target:"_blank",rel:"noopener noreferrer"},b=a('<h2 id="常用-git-命令" tabindex="-1"><a class="header-anchor" href="#常用-git-命令" aria-hidden="true">#</a> 常用 Git 命令</h2><div class="custom-container tip"><p class="custom-container-title">提示</p><p>[xxx] 均为可选参数</p></div><table><thead><tr><th style="text-align:left;">命令</th><th style="text-align:left;">作用</th></tr></thead><tbody><tr><td style="text-align:left;">git clone 仓库地址</td><td style="text-align:left;">下载一个 Git 项目</td></tr><tr><td style="text-align:left;">git config --list</td><td style="text-align:left;">显示当前的 Git 配置</td></tr><tr><td style="text-align:left;">git config [--global] user.name &quot;名称&quot;</td><td style="text-align:left;">设置提交代码时的用户名称</td></tr><tr><td style="text-align:left;">git config [--global] user.email &quot;邮箱&quot;</td><td style="text-align:left;">设置提交代码时的邮箱地址</td></tr><tr><td style="text-align:left;">git add .</td><td style="text-align:left;">添加所有文件到暂存区</td></tr><tr><td style="text-align:left;">git commit -m &quot;提交信息&quot;</td><td style="text-align:left;">提交暂存区到仓库区</td></tr><tr><td style="text-align:left;">git commit --amend -m &quot;提交信息&quot;</td><td style="text-align:left;">替换（无代码改动就重写）上一次 commit 信息</td></tr><tr><td style="text-align:left;">git branch</td><td style="text-align:left;">列出所有本地分支</td></tr><tr><td style="text-align:left;">git branch -r</td><td style="text-align:left;">列出所有远程分支</td></tr><tr><td style="text-align:left;">git branch -a</td><td style="text-align:left;">列出所有本地分支和远程分支</td></tr><tr><td style="text-align:left;">git branch -d 分支名</td><td style="text-align:left;">删除分支</td></tr><tr><td style="text-align:left;">git branch 分支名</td><td style="text-align:left;">新建一个分支，但依然停留在当前分支</td></tr><tr><td style="text-align:left;">git checkout --orphan 分支名</td><td style="text-align:left;">新建一个空白分支</td></tr><tr><td style="text-align:left;">git status</td><td style="text-align:left;">显示变更的文件</td></tr><tr><td style="text-align:left;">git log</td><td style="text-align:left;">显示当前分支的版本历史</td></tr><tr><td style="text-align:left;">git merge 分支名</td><td style="text-align:left;">合并指定分支到当前分支</td></tr><tr><td style="text-align:left;">git remote -v</td><td style="text-align:left;">显示所有远程仓库</td></tr><tr><td style="text-align:left;">git pull [remote][branch]</td><td style="text-align:left;">取回远程仓库的变化，并与本地分支合并</td></tr><tr><td style="text-align:left;">git push [remote][branch]</td><td style="text-align:left;">上传本地指定分支到远程仓库</td></tr><tr><td style="text-align:left;">git push [remote] --force</td><td style="text-align:left;">强行推送当前分支到远程仓库，即使有冲突</td></tr><tr><td style="text-align:left;">git stash</td><td style="text-align:left;">暂时将未提交的变化移除</td></tr><tr><td style="text-align:left;">git stash pop</td><td style="text-align:left;">取出未提交的变化</td></tr></tbody></table><p><a href="command">查看完整版 Git 命令</a></p>',4),y={href:"https://github.com/521xueweihan/git-tips",target:"_blank",rel:"noopener noreferrer"},k=a('<h2 id="commit-常用-type" tabindex="-1"><a class="header-anchor" href="#commit-常用-type" aria-hidden="true">#</a> commit 常用 type</h2><table><thead><tr><th style="text-align:left;">type</th><th style="text-align:left;">含义</th></tr></thead><tbody><tr><td style="text-align:left;">feat</td><td style="text-align:left;">新功能</td></tr><tr><td style="text-align:left;">fix</td><td style="text-align:left;">修复 bug</td></tr><tr><td style="text-align:left;">docs</td><td style="text-align:left;">修改文档</td></tr><tr><td style="text-align:left;">style</td><td style="text-align:left;">代码格式修改</td></tr><tr><td style="text-align:left;">refactor</td><td style="text-align:left;">重构（即不是新增功能，也不是修复 bug）</td></tr><tr><td style="text-align:left;">perf</td><td style="text-align:left;">更改代码以提高性能</td></tr><tr><td style="text-align:left;">test</td><td style="text-align:left;">增加测试</td></tr><tr><td style="text-align:left;">build</td><td style="text-align:left;">构建过程或辅助工具的变动</td></tr><tr><td style="text-align:left;">ci</td><td style="text-align:left;">修改项目持续集成流程</td></tr><tr><td style="text-align:left;">chore</td><td style="text-align:left;">其他类型的提交</td></tr><tr><td style="text-align:left;">revert</td><td style="text-align:left;">恢复上一次提交</td></tr></tbody></table><h2 id="使用-github-actions-自动部署" tabindex="-1"><a class="header-anchor" href="#使用-github-actions-自动部署" aria-hidden="true">#</a> 使用 GitHub Actions 自动部署</h2>',3),x={href:"https://github.com/features/actions",target:"_blank",rel:"noopener noreferrer"},v=t("h3",{id:"上传项目到github",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#上传项目到github","aria-hidden":"true"},"#"),e(" 上传项目到gitHub")],-1),_=t("p",null,"将项目上传到github上",-1),w=t("h3",{id:"创建个人访问令牌",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#创建个人访问令牌","aria-hidden":"true"},"#"),e(" 创建个人访问令牌")],-1),G={href:"https://docs.github.com/cn/github/authenticating-to-github/creating-a-personal-access-token",target:"_blank",rel:"noopener noreferrer"},A=a(`<h3 id="配置-secrets" tabindex="-1"><a class="header-anchor" href="#配置-secrets" aria-hidden="true">#</a> 配置 Secrets</h3><blockquote><p>Action 需要有操作仓库的权限</p></blockquote><p>1、打开第一步上传的项目 2、点击<code>Settings</code>按钮，进入Settings页面 3、点击<code>Secrets</code>按钮 4、点击<code>New repository secret</code>按钮</p><p>name为<code>ACCESS_TOKEN</code>，值为上面创建的个人访问令牌</p><h3 id="编写-workflow-文件" tabindex="-1"><a class="header-anchor" href="#编写-workflow-文件" aria-hidden="true">#</a> 编写 <code>workflow</code> 文件</h3><p>1、点击<code>Actions</code>按钮，进入Actions页面 2、点击 <code>Set up a workflow yourself</code> 按钮 3、复制如下内容</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> GitHub Actions Build and Deploy

<span class="token comment"># 触发条件: push 到 master 分支后</span>
<span class="token key atrule">on</span><span class="token punctuation">:</span>
  <span class="token key atrule">push</span><span class="token punctuation">:</span>
    <span class="token key atrule">branches</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> master

<span class="token comment"># 任务</span>
<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token key atrule">build-and-deploy</span><span class="token punctuation">:</span>
    <span class="token comment"># 服务器环境：最新版 ubuntu</span>
    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
      <span class="token comment"># 拉取代码</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">persist-credentials</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>

      <span class="token comment"># 打包静态文件</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Build
        <span class="token key atrule">run</span><span class="token punctuation">:</span> npm install <span class="token important">&amp;&amp;</span> npm run build

      <span class="token comment"># 部署</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> JamesIves/github<span class="token punctuation">-</span>pages<span class="token punctuation">-</span>deploy<span class="token punctuation">-</span>action@releases/v3
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token comment"># GitHub 密钥</span>
          <span class="token key atrule">ACCESS_TOKEN</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.ACCESS_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>
          <span class="token comment"># GitHub Pages 读取的分支</span>
          <span class="token key atrule">BRANCH</span><span class="token punctuation">:</span> gh<span class="token punctuation">-</span>pages
          <span class="token comment"># 静态文件所在目录</span>
          <span class="token key atrule">FOLDER</span><span class="token punctuation">:</span> dist

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>yml里的内容直接复制就可以，需要注意的是打包静态文件里的<code>npm run build</code>指令，要和当前项目 package.json文件里打包指令一致，默认指令为<code>docs:build</code></p></div>`,8),S={href:"http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html",target:"_blank",rel:"noopener noreferrer"},q={href:"https://docs.github.com/cn/actions/reference",target:"_blank",rel:"noopener noreferrer"},N=t("div",{class:"custom-container tip"},[t("p",{class:"custom-container-title"},"提示"),t("p",null,[e("项目部署以后，打开页面是空白，提示样式找不到，这是"),t("code",null,"config.js"),e("里的"),t("code",null,"base"),e("属性配置错误, base的值要和路径一致, 比如我的项目地址是https://zhaobao1830.github.io/zhaobao1830-notes/，那base的值就是/zhaobao1830-notes/")])],-1);function C(E,H){const n=i("ExternalLinkIcon");return o(),r("div",null,[c,t("ul",null,[t("li",null,[t("a",p,[e("官网"),s(n)])]),t("li",null,[t("a",u,[e("Git 学习教程"),s(n)])]),t("li",null,[t("a",g,[e("Github地址"),s(n)])]),t("li",null,[t("a",h,[e("Windows 版 Github"),s(n)])]),t("li",null,[t("a",f,[e("Windows 版下载镜像站"),s(n)])]),t("li",null,[t("a",m,[e("下载技巧 - 使用 jsdelivr 加速 Github 仓库资源"),s(n)])])]),b,t("p",null,[t("a",y,[e("git 命令大全 github"),s(n)])]),k,t("p",null,[t("a",x,[e("GitHub Actions"),s(n)]),e(" 是 GitHub 的持续集成服务")]),v,_,w,t("p",null,[t("a",G,[e("个人访问令牌创建地址"),s(n)])]),A,t("p",null,[e("详细教程可以参考阮一峰老师的"),t("a",S,[e("GitHub Actions 入门教程"),s(n)])]),t("p",null,[t("a",q,[e("GitHub Actions 中文文档"),s(n)])]),N])}const j=l(d,[["render",C],["__file","index.html.vue"]]);export{j as default};
