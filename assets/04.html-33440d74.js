import{_ as s,M as o,p as r,q as h,R as t,t as e,N as c,a1 as n}from"./framework-b7c41258.js";const i="/zhaobao1830-notes/assets/01-aa670ad7.png",f="/zhaobao1830-notes/assets/02-2fc80e0f.jpg",p="/zhaobao1830-notes/assets/03-3dcf6b7a.jpg",l={},_=t("h1",{id:"watch和watcheffect",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#watch和watcheffect","aria-hidden":"true"},"#"),e(" watch和watchEffect")],-1),d=t("h2",{id:"watcheffect",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#watcheffect","aria-hidden":"true"},"#"),e(" watchEffect")],-1),u={href:"https://cn.vuejs.org/api/reactivity-core.html#watcheffect",target:"_blank",rel:"noopener noreferrer"},w=n('<p>watchEffect是立即执行函数，页面渲染后就执行，并响应式地追踪其依赖</p><p>vue在页面退出，执行了销毁操作时，会把effect销毁</p><p>第一个参数就是要运行的副作用函数。这个副作用函数的参数也是一个函数，用来注册清理回调。清理回调会在该副作用下一次执行前被调用，可以用来清理无效的副作用，例如等待中的异步请求</p><p><img src="'+i+'" alt="Image text"></p><p>比如在watchEffect函数中发起axios请求，如果请求结果没有返回，可以在请求方法后面进行取消操作</p><p>第二个参数是一个可选的选项，可以用来调整副作用的刷新时机或调试副作用的依赖。</p><p>默认情况下，侦听器将在组件渲染之前执行。设置 <code>flush: &#39;post&#39;</code> 将会使侦听器延迟到组件渲染之后再执行。</p><p>flush可选值为：&#39;pre&#39; | &#39;post&#39; | &#39;sync&#39; // 默认：&#39;pre&#39;</p><p>备注：如果想在watchEffect中监听组件上的ref，可以把flush设置为&#39;post&#39;</p>',9),m={href:"https://cn.vuejs.org/api/built-in-special-attributes.html#ref",target:"_blank",rel:"noopener noreferrer"},g=t("h2",{id:"watch",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#watch","aria-hidden":"true"},"#"),e(" watch")],-1),v={href:"https://cn.vuejs.org/api/reactivity-core.html#watch",target:"_blank",rel:"noopener noreferrer"},x=t("p",null,"watch如果想监听reactive里的单个值，可以用getter函数或者toRefs",-1),b=t("p",null,[t("img",{src:f,alt:"Image text"})],-1),E=t("p",null,[t("img",{src:p,alt:"Image text"})],-1),j=t("h2",{id:"watch和watcheffect对比",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#watch和watcheffect对比","aria-hidden":"true"},"#"),e(" watch和watchEffect对比")],-1),k=t("p",null,"watch可以获取数据变化前后的值",-1),y=t("p",null,"watch 在响应数据初始化时是不会执行回调函数的(可以通过设置immediate:true立即执行回调)，watchEffect 在响应数据初始化时就会立即执行回调函数。",-1);function I(N,V){const a=o("ExternalLinkIcon");return r(),h("div",null,[_,d,t("p",null,[e("官网："),t("a",u,[e("https://cn.vuejs.org/api/reactivity-core.html#watcheffect"),c(a)])]),w,t("p",null,[e("因为"),t("a",m,[e("ref"),c(a)]),e("本身是作为渲染函数的结果来创建的，必须等待组件挂载后才能对它进行访问。")]),g,t("p",null,[e("官网："),t("a",v,[e("https://cn.vuejs.org/api/reactivity-core.html#watch"),c(a)])]),x,b,E,j,k,y])}const B=s(l,[["render",I],["__file","04.html.vue"]]);export{B as default};
