import{_ as s,o as i,c as a,R as n}from"./chunks/framework.1nBpG9uI.js";const t="/zhaobao1830-notes/assets/01.XXGXBsEs.png",e="/zhaobao1830-notes/assets/02.XyOMLTbv.png",p="/zhaobao1830-notes/assets/03.MmtT7SRW.png",l="/zhaobao1830-notes/assets/04.iZKF6AXi.png",h="/zhaobao1830-notes/assets/05.mlrLcwLg.png",r="/zhaobao1830-notes/assets/06.rRVkIDzY.png",k="/zhaobao1830-notes/assets/07.VvOCGcan.png",o="/zhaobao1830-notes/assets/08.amECxvdD.png",d="/zhaobao1830-notes/assets/09.iaKsD-pv.png",c="/zhaobao1830-notes/assets/10.ZC-8Q78F.png",E="/zhaobao1830-notes/assets/11.Y1FjqA1L.png",g="/zhaobao1830-notes/assets/12.9r_fKYI0.png",m="/zhaobao1830-notes/assets/13.TCFKp7xL.png",b="/zhaobao1830-notes/assets/14.qBGdJgEo.png",y="/zhaobao1830-notes/assets/15.OyIG7L7K.png",u="/zhaobao1830-notes/assets/16.qexTbWVj.png",F="/zhaobao1830-notes/assets/17.bHtxdjbL.png",_="/zhaobao1830-notes/assets/18.K9ehRjQy.png",P=JSON.parse('{"title":"微信公众号网页授权：获取用户openid和基本信息","description":"","frontmatter":{},"headers":[],"relativePath":"wechatKnowledge/01.md","filePath":"wechatKnowledge/01.md","lastUpdated":1752046959000}'),C={name:"wechatKnowledge/01.md"},A=n('<h1 id="微信公众号网页授权-获取用户openid和基本信息" tabindex="-1">微信公众号网页授权：获取用户openid和基本信息 <a class="header-anchor" href="#微信公众号网页授权-获取用户openid和基本信息" aria-label="Permalink to &quot;微信公众号网页授权：获取用户openid和基本信息&quot;">​</a></h1><h2 id="相关文档" tabindex="-1">相关文档 <a class="header-anchor" href="#相关文档" aria-label="Permalink to &quot;相关文档&quot;">​</a></h2><p><a href="https://developers.weixin.qq.com/doc/oplatform/Website_App/WeChat_Login/Wechat_Login.html" target="_blank" rel="noreferrer">网页授权微信文档地址</a></p><p>参考地址：<a href="https://blog.csdn.net/snowball_li/article/details/121152187" target="_blank" rel="noreferrer">https://blog.csdn.net/snowball_li/article/details/121152187</a></p><h2 id="需求" tabindex="-1">需求 <a class="header-anchor" href="#需求" aria-label="Permalink to &quot;需求&quot;">​</a></h2><p>使用Vue开发微信公众号项目，需要实现微信公众号授权功能（用户手动同意），并获取用户的基本信息</p><h2 id="前置准备" tabindex="-1">前置准备 <a class="header-anchor" href="#前置准备" aria-label="Permalink to &quot;前置准备&quot;">​</a></h2><p>在公众号管理平台进行操作</p><p>1、接口配置信息</p><p><img src="'+t+'" alt="Image text"></p><p>2、JS接口安全域名</p><p><img src="'+e+'" alt="Image text"></p><p>3、授权回调域名</p><p><img src="'+p+'" alt="Image text"></p><p><img src="'+l+`" alt="Image text"></p><div class="tip custom-block"><p class="custom-block-title">备注</p><p>这里面填写的回调域名，就是授权时候，请求微信接口里redirect_uri的值</p></div><h2 id="网页授权" tabindex="-1">网页授权 <a class="header-anchor" href="#网页授权" aria-label="Permalink to &quot;网页授权&quot;">​</a></h2><p>通过微信公众号网页授权获取微信可提供的相关的用户信息，包括openid、昵称、unionid等，供实现业务逻辑</p><p>网页授权分为；静默授权和非静默授权</p><p>静默授权：以snsapi_base为scope发起的网页授权，无感知的</p><p>非静默授权：以snsapi_userinfo为scope发起的网页授权，需要用户手动同意</p><div class="tip custom-block"><p class="custom-block-title">备注</p><p>对于已关注公众号的用户，如果用户从公众号的会话或者自定义菜单进入本公众号的网页授权页，即使是scope为snsapi_userinfo，也是静默授权，用户无感知。</p></div><h2 id="网页授权流程" tabindex="-1">网页授权流程 <a class="header-anchor" href="#网页授权流程" aria-label="Permalink to &quot;网页授权流程&quot;">​</a></h2><p>分为四步：</p><p>1、引导用户进入授权页面同意授权，获取code</p><p>2、通过code换取网页授权access_token（与基础支持中的access_token不同）</p><p>3、如果需要，开发者可以刷新网页授权access_token，避免过期</p><p>4、通过网页授权access_token和openid获取用户基本信息（支持UnionID机制）</p><h2 id="开发记录" tabindex="-1">开发记录 <a class="header-anchor" href="#开发记录" aria-label="Permalink to &quot;开发记录&quot;">​</a></h2><p>项目环境：vue3 + vite</p><h3 id="判断是否是微信环境" tabindex="-1">判断是否是微信环境 <a class="header-anchor" href="#判断是否是微信环境" aria-label="Permalink to &quot;判断是否是微信环境&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 判断是否是微信环境</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> isWechat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(navigator.userAgent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toLowerCase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">match</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">MicroMessenger</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;micromessenger&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="用户授权方法" tabindex="-1">用户授权方法 <a class="header-anchor" href="#用户授权方法" aria-label="Permalink to &quot;用户授权方法&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> userAuthorization</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    window.location.href </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx4250eeefa5931c46&amp;redirect_uri=http%3A%2F%2F18483629676.gnway.cc%2Findex.html%23%2Fhome&amp;response_type=code&amp;scope=snsapi_userinfo&amp;state=STATE#wechat_redirect&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">备注</p><p>在页面里调用userAuthorization方法，会打开微信自带的授权页面</p><p>点击同意后，会跳回倒redirect_uri配置的地址，该地址需要用urlEncode处理</p></div><h3 id="获取url里的code参数" tabindex="-1">获取url里的code参数 <a class="header-anchor" href="#获取url里的code参数" aria-label="Permalink to &quot;获取url里的code参数&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getQueryString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> paramsObj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> decodeURIComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(window.location.search </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window.location.hash)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> strs</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (url.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">indexOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;?&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!==</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // hash模式进此判断</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (window.location.hash) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        strs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> url.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">split</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;?&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">split</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&amp;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // history模式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        strs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> url.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">substr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">split</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&amp;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 循环遍历并添加到对象中</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> strs.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        paramsObj[strs[i].</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">split</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;=&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> strs[i].</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">split</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;=&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> paramsObj[name]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="code换取用户信息" tabindex="-1">code换取用户信息 <a class="header-anchor" href="#code换取用户信息" aria-label="Permalink to &quot;code换取用户信息&quot;">​</a></h3><p>将url中的code值传递给后端，在后端调用相应方法，换取access_token，再通过access_token换取用户的信息，并返回给前端</p><p>这部分操作可以看<a href="https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html#%E7%9B%AE%E5%BD%95" target="_blank" rel="noreferrer">官方文档</a></p><p>Java调用微信提供的方法，可以使用httpclient，也可以使用微信官方封装的jdk（本质是对httpclient的二次封装）</p><h3 id="授权图示" tabindex="-1">授权图示 <a class="header-anchor" href="#授权图示" aria-label="Permalink to &quot;授权图示&quot;">​</a></h3><p>首次授权</p><p><img src="`+h+'" alt="Image text"></p><p>近期已授权，再次登录的时候，不用再点击授权</p><p><img src="'+r+'" alt="Image text"></p><h2 id="开发遇到的问题" tabindex="-1">开发遇到的问题 <a class="header-anchor" href="#开发遇到的问题" aria-label="Permalink to &quot;开发遇到的问题&quot;">​</a></h2><h3 id="未绑定未公众号的开发者" tabindex="-1">未绑定未公众号的开发者 <a class="header-anchor" href="#未绑定未公众号的开发者" aria-label="Permalink to &quot;未绑定未公众号的开发者&quot;">​</a></h3><p><img src="'+k+'" alt="Image text"></p><p>解决办法：</p><p><img src="'+o+'" alt="Image text"></p><p><img src="'+d+'" alt="Image text"></p><p><img src="'+c+'" alt="Image text"></p><h3 id="未开启微信公众号接收功能" tabindex="-1">未开启微信公众号接收功能 <a class="header-anchor" href="#未开启微信公众号接收功能" aria-label="Permalink to &quot;未开启微信公众号接收功能&quot;">​</a></h3><p><img src="'+E+'" alt="Image text"></p><p>解决办法：</p><p>1、手机微信找到“公众平台安全助手”，点击右上角的icon</p><p><img src="'+g+'" alt="Image text"></p><p>2、点击右上角icon</p><p><img src="'+m+'" alt="Image text"></p><p>3、点击设置</p><p><img src="'+b+'" alt="Image text"></p><p>4、关闭消息免打扰、接收消息推送</p><p><img src="'+y+'" alt="Image text"></p><p>5、绑定后再次操作</p><p><img src="'+u+'" alt="Image text"></p><p>6、邀请后手机收到推送消息</p><p><img src="'+F+'" alt="Image text"></p><p>7、点击，绑定公众号开发者成功</p><p><img src="'+_+'" alt="Image text"></p><h3 id="未关注公众号" tabindex="-1">未关注公众号 <a class="header-anchor" href="#未关注公众号" aria-label="Permalink to &quot;未关注公众号&quot;">​</a></h3><p>当用户没有关注公众号的时候，可以从url里获取用户的code值，如果手动授权，可以获得用户的基本信息，但要获取详细信息，需要后端调用接口， 并且关注公众号</p><p>要让用户关注公众号，现在只能显示公众号的二维码，<strong>引导用户扫二维码关注</strong></p>',73),x=[A];function D(f,q,B,v,w,I){return i(),a("div",null,x)}const j=s(C,[["render",D]]);export{P as __pageData,j as default};
