import{_ as e,o as t,c as s,R as o}from"./chunks/framework.1nBpG9uI.js";const _=JSON.parse('{"title":"ESLint: Getting a value from the props in root scope of <script setup> will cause the value to lose reactivity.(vue/no-setup-props-destructure)","description":"","frontmatter":{},"headers":[],"relativePath":"vueNotes/29.md","filePath":"vueNotes/29.md","lastUpdated":1708483448000}'),a={name:"vueNotes/29.md"},p=o('<h1 id="eslint-getting-a-value-from-the-props-in-root-scope-of-script-setup-will-cause-the-value-to-lose-reactivity-vue-no-setup-props-destructure" tabindex="-1">ESLint: Getting a value from the <code>props</code> in root scope of <code>&lt;script setup&gt;</code> will cause the value to lose reactivity.(vue/no-setup-props-destructure) <a class="header-anchor" href="#eslint-getting-a-value-from-the-props-in-root-scope-of-script-setup-will-cause-the-value-to-lose-reactivity-vue-no-setup-props-destructure" aria-label="Permalink to &quot;ESLint: Getting a value from the `props` in root scope of `&lt;script setup&gt;` will cause the value to lose reactivity.(vue/no-setup-props-destructure)&quot;">​</a></h1><p>在vue3中，如果将props里定义的值，直接赋值给定义的变量，比如const a = ref(props.a) 这时就会报上面的错误</p><p>解决办法是通过computed将props里的值赋值给新定义的变量</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>const a = computed(() =&gt; props.a)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>',4),r=[p];function i(c,n,u,l,d,v){return t(),s("div",null,r)}const m=e(a,[["render",i]]);export{_ as __pageData,m as default};
