import{_ as e,o as a,c as s,R as t}from"./chunks/framework.1nBpG9uI.js";const o="/zhaobao1830-notes/assets/06.Q112Guw3.png",r="/zhaobao1830-notes/assets/01.F6_-wMBh.png",p="/zhaobao1830-notes/assets/02.SHUwmBAb.png",i="/zhaobao1830-notes/assets/03.XxcEycXb.png",c="/zhaobao1830-notes/assets/04.BgeTlxf5.png",d="/zhaobao1830-notes/assets/05.u4lg9Niz.png",n="/zhaobao1830-notes/assets/07.dySA9s6s.png",l="/zhaobao1830-notes/assets/10.fws3A3oS.png",h="/zhaobao1830-notes/assets/08.9ffwYuVs.png",m="/zhaobao1830-notes/assets/09.aUJVqS6o.png",w=JSON.parse('{"title":"redis","description":"","frontmatter":{},"headers":[],"relativePath":"java/redis/01.md","filePath":"java/redis/01.md","lastUpdated":1709689883000}'),_={name:"java/redis/01.md"},g=t('<h1 id="redis" tabindex="-1">redis <a class="header-anchor" href="#redis" aria-label="Permalink to &quot;redis&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p><a href="https://redis.io/" target="_blank" rel="noreferrer">Redis</a><a href="http://redis.cn/" target="_blank" rel="noreferrer">中文官网</a>是一个高速缓存数据库，是一种key-value（键值对）形式的存储系统，非关系型数据库。</p><p>Redis的数据 是放在内存里的，所以读写会很快</p><p><img src="'+o+'" alt="Image text"></p><h2 id="为什么需要redis" tabindex="-1">为什么需要redis <a class="header-anchor" href="#为什么需要redis" aria-label="Permalink to &quot;为什么需要redis&quot;">​</a></h2><p>在高并发的场景下，通过缓存，可以提升读取速度，在互联网环境下，80%是读操作，20%是写操作</p><p>内存的读取效率是远远高于硬盘存储的数据的。可以让大多数的请求去命中缓存，而少量的请求在有需求的时候才会去访问到数据库，从而就可以增加提高整个系统的并发量，能够减少数据库的压力，为其进行降压。</p><h2 id="缓存方案对比" tabindex="-1">缓存方案对比 <a class="header-anchor" href="#缓存方案对比" aria-label="Permalink to &quot;缓存方案对比&quot;">​</a></h2><h3 id="ehcache" tabindex="-1">Ehcache <a class="header-anchor" href="#ehcache" aria-label="Permalink to &quot;Ehcache&quot;">​</a></h3><p><strong>优点：</strong></p><p>1、基于java开发</p><p>2、基于JVM缓存</p><p>3、简单、轻巧、方便</p><p><strong>缺点：</strong></p><p>1、集群不支持</p><p>2、分布式不支持</p><h3 id="memcache" tabindex="-1">Memcache <a class="header-anchor" href="#memcache" aria-label="Permalink to &quot;Memcache&quot;">​</a></h3><p><strong>优点：</strong></p><p>1、简单的key-value存储</p><p>2、内存使用率比较高</p><p>3、多核处理，多线程</p><p><strong>缺点：</strong></p><p>1、无法容灾</p><p>2、无法持久化</p><h3 id="redis-1" tabindex="-1">Redis <a class="header-anchor" href="#redis-1" aria-label="Permalink to &quot;Redis&quot;">​</a></h3><p><strong>优点：</strong></p><p>1、丰富的数据结构</p><p>2、持久化</p><p>3、主从同步、故障转移</p><p>4、内存数据库</p><p><strong>缺点：</strong></p><p>1、单线程（大数量慢）</p><p>2、单核（多核处理器无法充分利用cpu）</p><h2 id="下载与安装" tabindex="-1">下载与安装 <a class="header-anchor" href="#下载与安装" aria-label="Permalink to &quot;下载与安装&quot;">​</a></h2><p>（一）、下载redis</p><p>下载地址：<a href="https://github.com/tporadowski/redis/releases" target="_blank" rel="noreferrer">https://github.com/tporadowski/redis/releases</a></p><p><a href="https://github.com/MicrosoftArchive/redis/releases" target="_blank" rel="noreferrer">https://github.com/MicrosoftArchive/redis/releases</a></p><p><img src="'+r+'" alt="Image text"></p><p>（二）、解压到文件夹</p><p><img src="'+p+'" alt="Image text"></p><p>（三）、配置环境变量</p><p>在环境变量里配置redis</p><p><img src="'+i+'" alt="Image text"></p><p>（四）、测试</p><p>在cmd中输入：redis-server</p><p><img src="'+c+'" alt="Image text"></p><p>输入：redis-cli</p><p><img src="'+d+'" alt="Image text"></p><div class="tip custom-block"><p class="custom-block-title">备注</p><p>redis-2.8版本配置了环境变量，在cmd中不能启动，只能通过点击文件夹中的redis-server.exe才行</p></div><h2 id="键空间通知-keyspace-notification" tabindex="-1">键空间通知（Keyspace notification） <a class="header-anchor" href="#键空间通知-keyspace-notification" aria-label="Permalink to &quot;键空间通知（Keyspace notification）&quot;">​</a></h2><h3 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-label="Permalink to &quot;概念&quot;">​</a></h3><p>redis受事件的影响，比如del方法、expired时间过期就会发布一个通知，客户端监听这个通知</p><h3 id="类型" tabindex="-1">类型 <a class="header-anchor" href="#类型" aria-label="Permalink to &quot;类型&quot;">​</a></h3><p>key-space和key-event</p><p>举例：</p><p>我们给redis set一个key，为name: zb，然后执行del方法删除这个key</p><p>key-space会返回del</p><p>key-event会返回被删除的key，这里是name</p><h3 id="监听的事件以及缩写" tabindex="-1">监听的事件以及缩写 <a class="header-anchor" href="#监听的事件以及缩写" aria-label="Permalink to &quot;监听的事件以及缩写&quot;">​</a></h3><p><img src="'+n+'" alt="Image text"></p><h3 id="key-event通知订阅" tabindex="-1">key-event通知订阅 <a class="header-anchor" href="#key-event通知订阅" aria-label="Permalink to &quot;key-event通知订阅&quot;">​</a></h3><p><strong>开启订阅：</strong></p><p>在redis.windows.conf文件里，添加notify-keyspace-events Ex，表示开启keyspace-events，订阅的是Ex(E表示键事件通知，所有通知以 <code>__keyevent@&lt;db&gt;__</code> 为前缀，x表示过期事件：每当有过期键被删除时发送)</p><p>也可以在cmd执行<code>redis-cli</code>后，用<code>config set notify-keyspace-events Ex</code>开启订阅（关闭redis后，订阅会关闭，需要每次都开启）</p><p><strong>订阅：</strong></p><p><img src="'+l+'" alt="Image text"></p><p>一、在cmd中输入<code>redis-server E:\\Redis-5.0.14.1\\redis.windows.conf</code>启动redis</p><div class="tip custom-block"><p class="custom-block-title">备注</p><p>如果在redis.windows.conf里修改了配置，启动的时候要在redis-server后面添加配置文件的路径</p></div><p><img src="'+h+'" alt="Image text"></p><p>二、上面的cmd不关闭，新打开cmd，执行<code>redis-cli</code>，输入<code>psubscribe __keyevent@0__:expired</code>，订阅（监听）keyevent里的expired（过期）事件</p><div class="tip custom-block"><p class="custom-block-title">备注</p><p>0表示第一个数据库，redis有16个数据，默认是第0个，如果想修改数据库，可以执行<code>select [index]</code></p></div><p><img src="'+m+'" alt="Image text"></p><p>三、再重新打开cmd，执行<code>redis-cli</code>，输入<code>setex name 10 zb</code>，打开步骤二的cmd，10秒后，就可以显示出当前输入的name</p><div class="tip custom-block"><p class="custom-block-title">备注</p><p>如果cmd里不显示，可以在步骤二的cmd里，在执行<code>redis-cli</code>后，输入<code>config set notify-keyspace-events Ex</code>，在执行后面的操作</p></div>',75),b=[g];function k(u,f,x,v,y,q){return a(),s("div",null,b)}const z=e(_,[["render",k]]);export{w as __pageData,z as default};
