import{_ as p,M as o,p as c,q as i,R as n,t as a,N as e,a1 as t}from"./framework-b7c41258.js";const r={},l=t(`<h1 id="小程序页面之间如何传递数据" tabindex="-1"><a class="header-anchor" href="#小程序页面之间如何传递数据" aria-hidden="true">#</a> 小程序页面之间如何传递数据</h1><h2 id="直接在url里传递" tabindex="-1"><a class="header-anchor" href="#直接在url里传递" aria-hidden="true">#</a> 直接在url里传递</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>wx<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/pages/detail/detail?pid=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>spuId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>少量数据建议使用这种方法传递</p><h2 id="本地缓存" tabindex="-1"><a class="header-anchor" href="#本地缓存" aria-hidden="true">#</a> 本地缓存</h2><p>使用<code>setStorageSync</code>和<code>getStorageSync</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>wx<span class="token punctuation">.</span><span class="token function">setStorageSync</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span>

wx<span class="token punctuation">.</span><span class="token function">getStorageSync</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>大量数据的时使用这种方法</p><h2 id="eventchannel" tabindex="-1"><a class="header-anchor" href="#eventchannel" aria-hidden="true">#</a> EventChannel</h2>`,9),u={href:"https://developers.weixin.qq.com/miniprogram/dev/api/route/EventChannel.html",target:"_blank",rel:"noopener noreferrer"},d=n("p",null,"大量数据时使用这种方法（实际项目中，上面俩种方法用的多，这种方法没用过）",-1),k=n("h2",{id:"triggerevent",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#triggerevent","aria-hidden":"true"},"#"),a(" triggerEvent")],-1),v={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/events.html",target:"_blank",rel:"noopener noreferrer"},h=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">triggerEvent</span><span class="token punctuation">(</span><span class="token string">&#39;customevent&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">bubbles</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">composed</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>bubbles：事件是否冒泡</p><p>composed：事件是否可以穿越组件边界，为false时，只能传递到父组件；为true时，可以传递到更上层的组件</p>`,3);function g(m,_){const s=o("ExternalLinkIcon");return c(),i("div",null,[l,n("p",null,[n("a",u,[a("EventChannel"),e(s)]),a("是小程序新加的机制， 实现页面间事件通信")]),d,k,n("p",null,[n("a",v,[a("triggerEvent"),e(s)]),a("自定义组件触发事件，将数据传递给父组件，类似于vue中的$emit")]),h])}const f=p(r,[["render",g],["__file","08.html.vue"]]);export{f as default};
