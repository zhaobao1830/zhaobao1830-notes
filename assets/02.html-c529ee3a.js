import{_ as o,M as p,p as i,q as c,R as s,t as a,N as e,a1 as t}from"./framework-b7c41258.js";const r="/zhaobao1830-notes/assets/01-c0252e4e.png",l="/zhaobao1830-notes/assets/02-79fc0191.png",d="/zhaobao1830-notes/assets/03-eb2937ab.png",u="/zhaobao1830-notes/assets/04-e4caca9c.png",h="/zhaobao1830-notes/assets/05-eb50c149.png",v="/zhaobao1830-notes/assets/06-77bbc247.png",g="/zhaobao1830-notes/assets/07-9aa16ea9.png",m="/zhaobao1830-notes/assets/08-76e803d1.png",k="/zhaobao1830-notes/assets/09-b10c8438.png",b="/zhaobao1830-notes/assets/14-b2975e2a.png",_="/zhaobao1830-notes/assets/10-d2c08ad8.png",x="/zhaobao1830-notes/assets/11-40caf567.png",f="/zhaobao1830-notes/assets/12-e592ccb9.png",A="/zhaobao1830-notes/assets/13-b31613f0.png",S={},w=s("h1",{id:"博客基于algolia实现全站搜索功能",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#博客基于algolia实现全站搜索功能","aria-hidden":"true"},"#"),a(" 博客基于Algolia实现全站搜索功能")],-1),I=s("h2",{id:"前言",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#前言","aria-hidden":"true"},"#"),a(" 前言")],-1),T={href:"https://v2.vuepress.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"},y={href:"https://v2.vuepress.vuejs.org/zh/reference/plugin/docsearch.html",target:"_blank",rel:"noopener noreferrer"},z=s("h2",{id:"algolia",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#algolia","aria-hidden":"true"},"#"),a(" Algolia")],-1),R={href:"https://docsearch.algolia.com/",target:"_blank",rel:"noopener noreferrer"},D=s("p",null,"VuePress 的官方文档就是使用的 Algolia 搜索，使用 Algolia 搜索最大的好处就是方便，它会自动爬取网站的页面内容并构建索引，你只用申请一个 Algolia 服务，在网站上添加一些代码，就像添加统计代码一样，然后就可以实现一个全文搜索功能。",-1),N=s("p",null,[s("img",{src:r,alt:"Image text"})],-1),B=s("h3",{id:"algolia-docsearch",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#algolia-docsearch","aria-hidden":"true"},"#"),a(" Algolia DocSearch")],-1),P={href:"https://www.algolia.com/developers/code-exchange/frontend-tools/docsearch/",target:"_blank",rel:"noopener noreferrer"},L=t('<h3 id="基本原理" tabindex="-1"><a class="header-anchor" href="#基本原理" aria-hidden="true">#</a> 基本原理</h3><p>Algolia 服务器会 <strong>定期抓取</strong> 我们指定的 文档地址 中的内容进行分析并 建立索引，这样在网站搜索框中输入关键词后，前端会调用 Algolia DocSearch 的接口并显示搜索结果。这些请求、结果显示的相关逻辑都封装好了，我们要做的就是按要求插入代码、配置好网站样式以及搜索框</p><h3 id="使用要求" tabindex="-1"><a class="header-anchor" href="#使用要求" aria-hidden="true">#</a> 使用要求</h3><p>Algolia DocSearch 提供的免费服务是需要申请的，当我们的网站满足下列条件时，Algolia 那边的工作人员才会让我们的申请通过：</p><ul><li><p>我们必须是云文档网站的 所有者，网站必须是 公开的。</p></li><li><p>网站内容必须是 开源项目的技术文档 或 技术博客。</p></li><li><p>网站申请服务时必须有 完整稳定的设计和内容，即确认网站做好生产准备。</p></li></ul><h2 id="配置algolia-docsearch步骤" tabindex="-1"><a class="header-anchor" href="#配置algolia-docsearch步骤" aria-hidden="true">#</a> 配置Algolia DocSearch步骤</h2><h3 id="申请algolia-docsearch服务" tabindex="-1"><a class="header-anchor" href="#申请algolia-docsearch服务" aria-hidden="true">#</a> 申请Algolia DocSearch服务</h3>',7),E={href:"https://docsearch.algolia.com/apply/",target:"_blank",rel:"noopener noreferrer"},C=t('<div class="custom-container tip"><p class="custom-container-title">备注</p><p>这里填写的网站地址必须是公开的、且设计完整、内容稳定。如果网站还处于测试阶段，申请通过的概率很小。</p></div><p><img src="'+l+'" alt="Image text"></p><h3 id="回复确认邮件" tabindex="-1"><a class="header-anchor" href="#回复确认邮件" aria-hidden="true">#</a> 回复确认邮件</h3><p>申请通过后，Algolia DocSearch 官方会发送确认邮件到上一个步骤中填写的邮箱，收到后需要回复一下这个网站是我们负责开发维护的，并且可以修改网站代码。</p><p><img src="'+d+`" alt="Image text"></p><p>回复邮件内容：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Thanks!

I am the maintatiner of the website, I can modify the code.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="接收邮件并配置" tabindex="-1"><a class="header-anchor" href="#接收邮件并配置" aria-hidden="true">#</a> 接收邮件并配置</h3><p>通过确认后，Algolia DocSearch 会再发一封使用邮件，其中包含 appId、apiKey 和 indexName，用于在网站生成框架中配置使用。</p><div class="custom-container tip"><p class="custom-container-title">备注</p><p>每次新创建Crawler，会生成新的apiKey，配置代码的时候，请确定好apiKey是哪个，不一定是邮件里发的</p></div><p><img src="`+u+'" alt="Image text"></p>',11),K={href:"https://www.algolia.com/",target:"_blank",rel:"noopener noreferrer"},M=t(`<p>配置代码：</p><p>./vuepress/config.ts</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> docsearchPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/plugin-docsearch&#39;</span>

plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
  <span class="token function">docsearchPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    appId<span class="token operator">:</span> <span class="token string">&#39;自己的appId&#39;</span><span class="token punctuation">,</span>
    apiKey<span class="token operator">:</span> <span class="token string">&#39;自己的apiKye&#39;</span><span class="token punctuation">,</span>
    indexName<span class="token operator">:</span> <span class="token string">&#39;自己的xindexName&#39;</span><span class="token punctuation">,</span>
    locales<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&#39;/&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        placeholder<span class="token operator">:</span> <span class="token string">&#39;搜索&#39;</span><span class="token punctuation">,</span>
        translations<span class="token operator">:</span> <span class="token punctuation">{</span>
          button<span class="token operator">:</span> <span class="token punctuation">{</span>
            buttonText<span class="token operator">:</span> <span class="token string">&#39;搜索&#39;</span><span class="token punctuation">,</span>
            buttonAriaLabel<span class="token operator">:</span> <span class="token string">&#39;搜索&#39;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          modal<span class="token operator">:</span> <span class="token punctuation">{</span>
            searchBox<span class="token operator">:</span> <span class="token punctuation">{</span>
              resetButtonTitle<span class="token operator">:</span> <span class="token string">&#39;清除查询条件&#39;</span><span class="token punctuation">,</span>
              resetButtonAriaLabel<span class="token operator">:</span> <span class="token string">&#39;清除查询条件&#39;</span><span class="token punctuation">,</span>
              cancelButtonText<span class="token operator">:</span> <span class="token string">&#39;取消&#39;</span><span class="token punctuation">,</span>
              cancelButtonAriaLabel<span class="token operator">:</span> <span class="token string">&#39;取消&#39;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            startScreen<span class="token operator">:</span> <span class="token punctuation">{</span>
              recentSearchesTitle<span class="token operator">:</span> <span class="token string">&#39;搜索历史&#39;</span><span class="token punctuation">,</span>
              noRecentSearchesText<span class="token operator">:</span> <span class="token string">&#39;没有搜索历史&#39;</span><span class="token punctuation">,</span>
              saveRecentSearchButtonTitle<span class="token operator">:</span> <span class="token string">&#39;保存至搜索历史&#39;</span><span class="token punctuation">,</span>
              removeRecentSearchButtonTitle<span class="token operator">:</span> <span class="token string">&#39;从搜索历史中移除&#39;</span><span class="token punctuation">,</span>
              favoriteSearchesTitle<span class="token operator">:</span> <span class="token string">&#39;收藏&#39;</span><span class="token punctuation">,</span>
              removeFavoriteSearchButtonTitle<span class="token operator">:</span> <span class="token string">&#39;从收藏中移除&#39;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            errorScreen<span class="token operator">:</span> <span class="token punctuation">{</span>
              titleText<span class="token operator">:</span> <span class="token string">&#39;无法获取结果&#39;</span><span class="token punctuation">,</span>
              helpText<span class="token operator">:</span> <span class="token string">&#39;你可能需要检查你的网络连接&#39;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            footer<span class="token operator">:</span> <span class="token punctuation">{</span>
              selectText<span class="token operator">:</span> <span class="token string">&#39;选择&#39;</span><span class="token punctuation">,</span>
              navigateText<span class="token operator">:</span> <span class="token string">&#39;切换&#39;</span><span class="token punctuation">,</span>
              closeText<span class="token operator">:</span> <span class="token string">&#39;关闭&#39;</span><span class="token punctuation">,</span>
              searchByText<span class="token operator">:</span> <span class="token string">&#39;搜索提供者&#39;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            noResultsScreen<span class="token operator">:</span> <span class="token punctuation">{</span>
              noResultsText<span class="token operator">:</span> <span class="token string">&#39;无法找到相关结果&#39;</span><span class="token punctuation">,</span>
              suggestedQueryText<span class="token operator">:</span> <span class="token string">&#39;你可以尝试查询&#39;</span><span class="token punctuation">,</span>
              reportMissingResultsText<span class="token operator">:</span> <span class="token string">&#39;你认为该查询应该有结果？&#39;</span><span class="token punctuation">,</span>
              reportMissingResultsLinkText<span class="token operator">:</span> <span class="token string">&#39;点击反馈&#39;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="后台管理数据" tabindex="-1"><a class="header-anchor" href="#后台管理数据" aria-hidden="true">#</a> 后台管理数据</h2>`,4),V={href:"https://www.algolia.com/",target:"_blank",rel:"noopener noreferrer"},j={href:"https://www.algolia.com/dashboard",target:"_blank",rel:"noopener noreferrer"},q=s("p",null,[s("img",{src:h,alt:"Image text"})],-1),F=s("p",null,'二、点击左侧列表里的"Search"，可以查看对应的 “indexName” 数据，如果 “Browse” 里面没有显示数据，那么说明 DocSearch 的爬虫有点问题，导致没有生成对应的 Records：',-1),O={href:"https://crawler.algolia.com/admin/crawlers",target:"_blank",rel:"noopener noreferrer"},Q=t('<p><img src="'+v+'" alt="Image text"></p><div class="custom-container tip"><p class="custom-container-title">备注</p><p>可以创建新的crawler</p></div><p>四、如果Records为0，说明爬虫配置有问题，可以点击左侧的Editor进行修改</p><p><img src="'+g+'" alt="Image text"></p><p>五、修改Editor里的配置，修改完后点击右侧的URL Tester进行测试</p><p><img src="'+m+'" alt="Image text"></p><p>如果出现右侧的Record列表，说明配置正确；</p><p>还可以点击Search Preview进行测试</p><p>测试通过后点击右上角的save</p><p>六、更新抓取的数据</p><p>Overview页面点击右上角的Restart crawling按钮重新抓取数据，Records不为0，说明成功，这是打开自己的网站，搜索应该是成功的</p><p><img src="'+k+'" alt="Image text"></p><h2 id="问题集" tabindex="-1"><a class="header-anchor" href="#问题集" aria-hidden="true">#</a> 问题集</h2><p>一、docsearch插件安装失败</p><p><img src="'+b+'" alt="Image text"></p><p>原因：版本不一致</p><p>将vuepress、docsearch、theme-data插件都设定为2.0.0-beta.60版本</p><p>二、在Editor和Settings页面修改api key失败</p><p><img src="'+_+'" alt="Image text"></p><p><img src="'+x+'" alt="Image text"></p><p>原因：api key是创建Crawler时生成的，不能修改</p><p>三、Records为0</p><p>原因：爬虫配置有问题</p><p><img src="'+f+`" alt="Image text"></p><p>1、indexName配置不对，可以去Settings页面查看，indexName和Project Name是一致的</p><p>2、pathsToMatch里会在网址名后加docs，把docs去掉</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>pathsToMatch<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;https://zhaobao1830.github.io/zhaobao1830-notes/docs/**&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>四、在爬虫管理平台测试成功，但网站里搜索还是没有结果</p><p>原因：f12，查看indexName是否一致，有可能配置了Index Prefix（在Settings页面查看和修改），查询的时候indexName是其他的值</p><p><img src="`+A+'" alt="Image text"></p>',30);function U(G,H){const n=p("ExternalLinkIcon");return i(),c("div",null,[w,I,s("p",null,[a("我的博客是基于"),s("a",T,[a("vuepress2"),e(n)]),a("搭建的，内置的搜索只会提取文档的标题（h1、h2、h3）构建搜索索引，搜索的内容不全，所以换成"),s("a",y,[a("Algolia DocSearch"),e(n)]),a("来 实现搜索功能")]),z,s("p",null,[s("a",R,[a("Algolia"),e(n)]),a("是一个数据库实时搜索服务，能够提供毫秒级的数据库搜索服务，并且其服务能以 API 的形式方便地布局到网页、客户端、APP 等多种场景。")]),D,N,B,s("p",null,[s("a",P,[a("Algolia DocSearch"),e(n)]),a(" 是 Algolia 提供的自动化的全文搜索服务，DocSearch 会定时爬取指定网站（通常就是我们的文档网站）上的内容，自动构建搜索索引，不需要繁琐的配置，操作简单，用户只需要用相关的 API 直接调用就行了。")]),L,s("p",null,[a("前往"),s("a",E,[a("Algolia DocSearch Apply"),e(n)]),a("，填写网址、邮箱、代码仓库信息，然后申请")]),C,s("p",null,[a("该邮件还会提供接受邀请的链接，前往该链接重新设置密码后（账号是申请时填的邮箱），即可登录 "),s("a",K,[a("Algolia"),e(n)]),a("。")]),M,s("p",null,[a("申请 Algolia DocSearch 成功后，我们可以前往 "),s("a",V,[a("Algolia"),e(n)]),a(" 管理自己的后台数据。")]),s("p",null,[a("一、登陆账户，点击右上角的“"),s("a",j,[a("Dashboard"),e(n)]),a("” 按钮前往后台")]),q,F,s("p",null,[a("三、前往"),s("a",O,[a("Algolia 的爬虫后台"),e(n)]),a("，点击右侧的Carwlers列表中对应的Carwler")]),Q])}const W=o(S,[["render",U],["__file","02.html.vue"]]);export{W as default};
