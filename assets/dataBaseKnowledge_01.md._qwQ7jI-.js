import{_ as a,o as e,c as o,R as t}from"./chunks/framework.1nBpG9uI.js";const q=JSON.parse('{"title":"NoSql","description":"","frontmatter":{},"headers":[],"relativePath":"dataBaseKnowledge/01.md","filePath":"dataBaseKnowledge/01.md","lastUpdated":1717056127000}'),r={name:"dataBaseKnowledge/01.md"},l=t('<h1 id="nosql" tabindex="-1">NoSql <a class="header-anchor" href="#nosql" aria-label="Permalink to &quot;NoSql&quot;">​</a></h1><h2 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-label="Permalink to &quot;概念&quot;">​</a></h2><p>NoSQL的全称是 Not Only SQL，即它除了做数据存储以外，还有其它的一些功能。</p><p>1、非关系型数据库就是NoSQL，MySQL、Oracle等都是关系型数据库</p><p>2、对于关系型数据库来说，是需要把数据存储到库、表、行、字段里，查询的时候根据条件一行一行地去匹配，当量非常大的时候就很耗费时间和资源，尤其是数据需要从磁盘里去检索</p><p>3、NoSQL数据库存储原理非常简单(典型的数据类型为k-v),不存在繁杂的关系链</p><p>4、NoSQL数据可以存储在内存里，查询速度非常快</p><p>5、NoSQL在性能表现上虽然能优于关系型数据库，但是它并不能完全替代关系型数据库</p><p>6、NoSQL因为没有复杂的数据结构，扩展非常容易，支持分布式</p><h2 id="分类" tabindex="-1">分类 <a class="header-anchor" href="#分类" aria-label="Permalink to &quot;分类&quot;">​</a></h2><h3 id="kv存储数据库" tabindex="-1">KV存储数据库 <a class="header-anchor" href="#kv存储数据库" aria-label="Permalink to &quot;KV存储数据库&quot;">​</a></h3><p>Redis、BerkeleyDB、MemcacheDB</p><p>可以通过key快速查询到value。一般来说，存储不需要考虑value的格式。</p><h3 id="列存储数据库" tabindex="-1">列存储数据库 <a class="header-anchor" href="#列存储数据库" aria-label="Permalink to &quot;列存储数据库&quot;">​</a></h3><p>Hbase、Cassandra、Hypertable</p><p>按列存储数据，最大的特点是方便存储结构化和半结构化数据，方便做数据压缩，对针对某一列或者某几列的查询有着极大的IO优势。</p><h3 id="文档存储数据库" tabindex="-1">文档存储数据库 <a class="header-anchor" href="#文档存储数据库" aria-label="Permalink to &quot;文档存储数据库&quot;">​</a></h3><p>MongoDB、CouchDB</p><p>文档数据库一般用类似json的格式存储，存储的内容是文档型的。这样也就有机会对某些字段建立索引，实现关系数据库的某些功能。</p><h3 id="图关系数据库" tabindex="-1">图关系数据库 <a class="header-anchor" href="#图关系数据库" aria-label="Permalink to &quot;图关系数据库&quot;">​</a></h3><p>Neo4J、FlockDB</p>',21),n=[l];function s(d,h,i,p,c,_){return e(),o("div",null,n)}const m=a(r,[["render",s]]);export{q as __pageData,m as default};
