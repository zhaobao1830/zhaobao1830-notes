import{_ as t,p as e,q as p,a1 as n}from"./framework-b7c41258.js";const o={},r=n('<h1 id="组件的封装" tabindex="-1"><a class="header-anchor" href="#组件的封装" aria-hidden="true">#</a> 组件的封装</h1><p><strong>封装组件的时候，必须在组件的灵活性和易用性之间/稳定性之间做出一个选择</strong></p><p>组件越灵活，相应的越不稳定，也越不易用；</p><p>越是简单的组件，灵活性和定制性就不够。</p><p>参考Lin ui 可以把小程序里的Page都换成Component，因为Component更加灵活</p><p><strong>组件的意义是什么？</strong></p><p>组件从三个方面：样式、骨架、业务逻辑/行为上对代码进行封装，方便开发者在日后重用/复用样式、骨架和业务逻辑</p><p><strong>为了保证组件的灵活性，可以采取以下措施进行改造：</strong></p><p>以小程序的组件为例：</p><p>1、提供外部样式类(样式)</p><p>2、slot插槽的使用（骨架）</p><p>封装组件的时候，要设置好默认值</p>',12),s=[r];function a(c,_){return e(),p("div",null,s)}const d=t(o,[["render",a],["__file","01.html.vue"]]);export{d as default};
