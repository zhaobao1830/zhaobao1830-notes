import{_ as n,p as s,q as a,a1 as p}from"./framework-b7c41258.js";const t="/zhaobao1830-notes/assets/01-2192efea.png",e={},o=p('<h1 id="根据目录结构自动生成路由前缀" tabindex="-1"><a class="header-anchor" href="#根据目录结构自动生成路由前缀" aria-hidden="true">#</a> 根据目录结构自动生成路由前缀</h1><p><img src="'+t+`" alt="Image text"></p><p><strong>问题：BannerController类在com.zb.misszb.api.v1目录下，如何只需要在BannerController的RequestMapping里配置/banner就行，v1前缀 自动加上呢？</strong></p><p>解决办法：配置自动路由前缀</p><p>一、在application.yml配置文件里添加controller所在的完整路径</p><p>application.yml</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">misszb</span><span class="token punctuation">:</span>
  <span class="token key atrule">api-package</span><span class="token punctuation">:</span> com.zb.misszb.api
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>二、新建AutoPrefixUrlMapping.java文件，重新生成新的RequestMapping</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>zb<span class="token punctuation">.</span>misszb<span class="token punctuation">.</span>core<span class="token punctuation">.</span>hack</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span></span><span class="token class-name">RequestMappingInfo</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMappingHandlerMapping</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Method</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AutoPrefixUrlMapping</span> <span class="token keyword">extends</span> <span class="token class-name">RequestMappingHandlerMapping</span> <span class="token punctuation">{</span>


    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${misszb.api-package}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> apiPackagePath<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token class-name">RequestMappingInfo</span> <span class="token function">getMappingForMethod</span><span class="token punctuation">(</span><span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> handlerType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">RequestMappingInfo</span> mappingInfo <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getMappingForMethod</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> handlerType<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// mappingInfo就是controller和里面的方法</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>mappingInfo <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// 生成前缀</span>
            <span class="token class-name">String</span> prefix <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPrefix</span><span class="token punctuation">(</span>handlerType<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 将前缀和controller里的RequestMapping合并</span>
            <span class="token comment">// SpringBoot 2.2.2版本用这个</span>
            <span class="token comment">// return RequestMappingInfo.paths(prefix).build().combine(mappingInfo);</span>
            <span class="token comment">// SpringBoot 2.7.12版本用这个</span>
            <span class="token keyword">return</span> <span class="token class-name">RequestMappingInfo</span><span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span>prefix<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getBuilderConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">combine</span><span class="token punctuation">(</span>mappingInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> mappingInfo<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">getPrefix</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> handlerType<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// packageName为com.zb.misszb.api.v1</span>
        <span class="token class-name">String</span> packageName <span class="token operator">=</span> handlerType<span class="token punctuation">.</span><span class="token function">getPackage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 对packageName进行处理，将com.zb.misszb.api去掉</span>
        <span class="token class-name">String</span> dotPath <span class="token operator">=</span> packageName<span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>apiPackagePath<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 返回/v1</span>
        <span class="token keyword">return</span> dotPath<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第三步、新建AutoPrefixConfiguration配置类，将上面新建的AutoPrefixUrlMapping类加入到容器里，并让SpringBoot可以扫码到</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>zb<span class="token punctuation">.</span>misszb<span class="token punctuation">.</span>core<span class="token punctuation">.</span>configuration</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>zb<span class="token punctuation">.</span>misszb<span class="token punctuation">.</span>core<span class="token punctuation">.</span>hack<span class="token punctuation">.</span></span><span class="token class-name">AutoPrefixUrlMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">WebMvcRegistrations</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMappingHandlerMapping</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AutoPrefixConfiguration</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcRegistrations</span><span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">RequestMappingHandlerMapping</span> <span class="token function">getRequestMappingHandlerMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AutoPrefixUrlMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">备注</p><p>需要实现WebMvcRegistrations接口，重写getRequestMappingHandlerMapping方法</p></div><p>项目里加上上面的文件后，只要controller文件在com.zb.misszb.api里，不管嵌套几层，都会自动加上前缀</p>`,13),c=[o];function i(l,u){return s(),a("div",null,c)}const r=n(e,[["render",i],["__file","07.html.vue"]]);export{r as default};
