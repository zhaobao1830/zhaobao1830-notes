import{_ as e,M as t,p as o,q as i,R as a,t as s,N as c,a1 as r}from"./framework-b7c41258.js";const l={},p=a("h1",{id:"good-storage",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#good-storage","aria-hidden":"true"},"#"),s(" good-storage")],-1),d={href:"https://github.com/ustbhuangyi/storage",target:"_blank",rel:"noopener noreferrer"},u=r(`<h2 id="storage" tabindex="-1"><a class="header-anchor" href="#storage" aria-hidden="true">#</a> storage</h2><p>a storage lib which support sessionStorage and localStorage with the same api</p><h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> Install</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> npm install good<span class="token operator">-</span>storage
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token keyword">import</span> storage <span class="token keyword">from</span> <span class="token string">&#39;good-storage&#39;</span>
 
 <span class="token comment">// localStorage</span>
 storage<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>val<span class="token punctuation">)</span> 
 
 storage<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> def<span class="token punctuation">)</span>
 
 <span class="token comment">// sessionStorage</span>
 storage<span class="token punctuation">.</span>session<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> val<span class="token punctuation">)</span>
 
 storage<span class="token punctuation">.</span>session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> val<span class="token punctuation">)</span>
 

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h2><p>set(key, val) set storage with key and val</p><p>get(key, def) get storage with key, return def if not find</p><p>remove(key) remove storage with key</p><p>has(key) determine storage has the key</p><p>clear() clear all storages</p><p>getAll() get all the storages</p><p>forEach(callback) forEach the storages and call the callback function with each storage</p>`,14);function g(h,v){const n=t("ExternalLinkIcon");return o(),i("div",null,[p,a("p",null,[a("a",d,[s("good-storage"),c(n)])]),u])}const m=e(l,[["render",g],["__file","good-storage.html.vue"]]);export{m as default};
