import{_ as p,o as r,c as o,R as n}from"./chunks/framework.1nBpG9uI.js";const i="/zhaobao1830-notes/assets/01.lwxSqyjv.png",h=JSON.parse('{"title":"spring、spring boot、spring mvc之间的关系","description":"","frontmatter":{},"headers":[],"relativePath":"javaKnowledge/02.md","filePath":"javaKnowledge/02.md","lastUpdated":1706510657000}'),e={name:"javaKnowledge/02.md"},t=n('<h1 id="spring、spring-boot、spring-mvc之间的关系" tabindex="-1">spring、spring boot、spring mvc之间的关系 <a class="header-anchor" href="#spring、spring-boot、spring-mvc之间的关系" aria-label="Permalink to &quot;spring、spring boot、spring mvc之间的关系&quot;">​</a></h1><p>Spring 框架就像一个家族，有众多衍生产品例如 boot、security、jpa等等。但他们的基础都是Spring 的 ioc和 aop</p><p>ioc提供了依赖注入的容器；aop解决了面向横切面的编程，然后在此两者的基础上实现了其他延伸产品的高级功能</p><p>Spring MVC是基于 Servlet 的一个 MVC 框架，主要解决 WEB 开发的问题，因为 Spring 的配置非常复杂，各种XML、 JavaConfig、hin处理起来比较繁琐。于是为了简化开发者的使用，从而创造性地推出了Spring boot，约定优于配置，简化了spring的配置流程。</p><p>说得更简便一些：Spring 最初利用“工厂模式”（DI）和“代理模式”（AOP）解耦应用组件。大家觉得挺好用，于是按照这种模式搞了一个 MVC框架（一些用Spring 解耦的组件），用开发 web 应用（ SpringMVC ）。然后有发现每次开发都写很多样板代码，为了简化工作流程，于是开发出了一些“懒人整合包”（starter），这套就是 Spring Boot。</p><h2 id="spring-mvc" tabindex="-1">Spring MVC <a class="header-anchor" href="#spring-mvc" aria-label="Permalink to &quot;Spring MVC&quot;">​</a></h2><p>Spring MVC提供了一种轻度耦合的方式来开发web应用。</p><p>Spring MVC是Spring的一个模块，是一个web框架。</p><p>通过Dispatcher Servlet、 ModelAndView 和 View Resolver，开发web应用变得很容易。</p><p>解决的问题领域是网站应用程序或者服务开发——URL路由、Session、模板引擎、静态Web资源等等。</p><h2 id="spring-boot" tabindex="-1">Spring Boot <a class="header-anchor" href="#spring-boot" aria-label="Permalink to &quot;Spring Boot&quot;">​</a></h2><p>Spring Boot实现了自动配置，降低了项目搭建的复杂度。</p><p>众所周知Spring框架需要进行大量的配置，Spring Boot引入自动配置的概念，让项目设置变得很容易。</p><p>Spring Boot本身并不提供Spring框架的核心特性以及扩展功能，只是用于快速、敏捷地开发新一代基于Spring框架的应用程序。也就是说，它并不是用来替代Spring的解决方案，而是和Spring框架紧密结合用于提升Spring开发者体验的工具。同时它集成了大量常用的第三方库配置(例如Jackson, JDBC, Mongo, Redis, Mail等等)，Spring Boot应用中这些第三方库几乎可以零配置的开箱即用(out-of-the-box)，大部分的Spring Boot应用都只需要非常少量的配置代码，开发者能够更加专注于业务逻辑。</p><p>Spring Boot只是承载者，辅助你简化项目搭建过程的。如果承载的是WEB项目，使用Spring MVC作为MVC框架，那么工作流程和你上面描述的是完全一样的，因为这部分工作是Spring MVC做的而不是Spring Boot。</p><p>对使用者来说，换用Spring Boot以后，项目初始化方法变了，配置文件变了，另外就是不需要单独安装Tomcat这类容器服务器了，maven打出jar包直接跑起来就是个网站，但你最核心的业务逻辑实现与业务流程实现没有任何变化。</p><p>所以，用最简练的语言概括就是：</p><p>Spring 是一个“引擎”；</p><p>Spring MVC 是基于Spring的一个 MVC 框架 ；</p><p>Spring Boot 是基于Spring4的条件注册的一套快速开发整合包。</p><p><img src="'+i+'" alt="Image text"></p><p>Spring就是Spring Framework</p><p>SpringMVC是Spring Framework中的一个子模块，主要是web方面的</p><p>SpringBoot可以看做是Spring Framework 的应用，里面用的很多东西都是Spring Framework 的（如：xml、注解（现在推荐用注解））</p><p>SpringBoot的核心优势是：自动配置</p>',25),a=[t];function g(s,S,c,l,d,_){return r(),o("div",null,a)}const b=p(e,[["render",g]]);export{h as __pageData,b as default};
