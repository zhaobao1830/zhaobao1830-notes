import{_ as e,M as t,p,q as o,R as a,t as n,N as c,a1 as i}from"./framework-b7c41258.js";const r={},l=a("h1",{id:"compareto比较",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#compareto比较","aria-hidden":"true"},"#"),n(" compareTo比较")],-1),u={href:"https://github.com/zhaobao1830/misszb",target:"_blank",rel:"noopener noreferrer"},d=i(`<h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h2><p>compareTo用于俩个值的比较，返回值是整型</p><p>A.compareTo(B)</p><p>如果A等于B，返回0</p><p>如果A小于B，返回负数</p><p>如果A大于B，返回正数</p><h2 id="需求" tabindex="-1"><a class="header-anchor" href="#需求" aria-hidden="true">#</a> 需求</h2><p>判断订单金额是否大于等于0</p><p>可以使用校验@DecimalMin，也可以使用compareTo进行判断</p><h2 id="实现" tabindex="-1"><a class="header-anchor" href="#实现" aria-hidden="true">#</a> 实现</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">isOk</span><span class="token punctuation">(</span><span class="token class-name">Long</span> uid<span class="token punctuation">,</span> <span class="token class-name">OrderDTO</span> orderDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>orderDTO<span class="token punctuation">.</span><span class="token function">getFinalTotalPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ParameterException</span><span class="token punctuation">(</span><span class="token number">50011</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>orderDTO.getFinalTotalPrice()获取FinalTotalPrice（总价）的值</p><p>new BigDecimal(&quot;0&quot;) 因为OrderDTO中的FinalTotalPrice格式是BigDecimal，所以需要与BigDecimal格式的0进行对比</p><p>对比返回的值如果小于等于0，说明总价不对，返回错误提示</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>第一、俩个值的对比可以使用compareTo进行比较</p><p>第二、new BigDecimal为什么要传入Sting？</p><p>BigDecimal构造器传参时使用String不会丢失精度，使用浮点或者双精度会丢失精度。</p>`,18);function k(m,h){const s=t("ExternalLinkIcon");return p(),o("div",null,[l,a("p",null,[n("项目："),a("a",u,[n("misszb/OrderServiceImpl"),c(s)])]),d])}const _=e(r,[["render",k],["__file","20.html.vue"]]);export{_ as default};
