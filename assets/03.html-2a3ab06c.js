import{_ as t,M as e,p,q as o,R as n,t as a,N as c,a1 as l}from"./framework-b7c41258.js";const i={},u=n("h1",{id:"使用node-qrcode生成二维码",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#使用node-qrcode生成二维码","aria-hidden":"true"},"#"),a(" 使用node-qrcode生成二维码")],-1),r={href:"https://www.npmjs.com/package/qrcode",target:"_blank",rel:"noopener noreferrer"},d=l(`<p>安装</p><div class="language-npm line-numbers-mode" data-ext="npm"><pre class="language-npm"><code>npm install --save qrcode
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用：</p><p>一、新建放置二维码的canvas</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>canvas<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>二、执行QRCode.toCanvas方法</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    QRCode<span class="token punctuation">.</span><span class="token function">toCanvas</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;canvas&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;http://127.0.0.1:5173/&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&#39;100&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>备注：</p><p>toCanvas(canvasElement, text, [options], [cb(error)])</p><p>canvasElement要放置二维码的位置，通过document.getElementById获取</p><p>text 要渲染成二维码的数据，可以是文字，也可以是Url</p><p>options 现在确定是可以传width</p><p>cb 生成二维码成功后返回的函数</p>`,13);function k(v,m){const s=e("ExternalLinkIcon");return p(),o("div",null,[u,n("p",null,[n("a",r,[a("node-qrcode"),c(s)]),a("生成二维码")]),d])}const h=t(i,[["render",k],["__file","03.html.vue"]]);export{h as default};
