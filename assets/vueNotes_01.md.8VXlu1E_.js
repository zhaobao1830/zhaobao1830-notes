import{_ as s,o as a,c as e,R as i}from"./chunks/framework.1nBpG9uI.js";const E=JSON.parse('{"title":"vue-router里实现过渡效果","description":"","frontmatter":{},"headers":[],"relativePath":"vueNotes/01.md","filePath":"vueNotes/01.md","lastUpdated":1712110562000}'),n={name:"vueNotes/01.md"},t=i(`<h1 id="vue-router里实现过渡效果" tabindex="-1">vue-router里实现过渡效果 <a class="header-anchor" href="#vue-router里实现过渡效果" aria-label="Permalink to &quot;vue-router里实现过渡效果&quot;">​</a></h1><p><a href="https://next.router.vuejs.org/zh/api/index.html#router-link-%E7%9A%84-v-slot" target="_blank" rel="noreferrer">router-view的 v-slot</a></p><p><a href="https://v3.cn.vuejs.org/guide/transitions-enterleave.html#%E5%8D%95%E5%85%83%E7%B4%A0-%E7%BB%84%E4%BB%B6%E7%9A%84%E8%BF%87%E6%B8%A1" target="_blank" rel="noreferrer">过渡效果</a></p><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">router-view</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    v-slot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{ Component }</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;transition name=&quot;slide&quot;&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;component :is=&quot;Component&quot; :singer=&quot;selectedSinger&quot;/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;/transition&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">router-view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>Component 是固定写法</p><p>name=&quot;slide&quot; 这是过渡效果的cass名</p></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>如果要指定渲染的路由，可以在router-view里加上name</p><p>例子中的name=&#39;user&#39; 表明只能渲染user对应的组件</p></div>`,6),l=[t];function p(r,o,h,u,k,c){return a(),e("div",null,l)}const m=s(n,[["render",p]]);export{E as __pageData,m as default};
