import{_ as r,M as l,p as t,q as c,R as e,t as a,N as o}from"./framework-b7c41258.js";const s={},d=e("h1",{id:"webpack",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#webpack","aria-hidden":"true"},"#"),a(" Webpack")],-1),i=e("h2",{id:"概念",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#概念","aria-hidden":"true"},"#"),a(" 概念")],-1),p={href:"https://webpack.docschina.org/concepts/",target:"_blank",rel:"noopener noreferrer"},h=e("h2",{id:"loader",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#loader","aria-hidden":"true"},"#"),a(" Loader")],-1),_={href:"https://webpack.docschina.org/concepts/loaders/",target:"_blank",rel:"noopener noreferrer"},u=e("p",null,"module.rules 允许你在 webpack 配置中指定多个 loader。 这种方式是展示 loader 的一种简明方式，并且有助于使代码变得简洁和易于维护。",-1),b=e("p",null,"多个 Loader 串联",-1),k=e("ul",null,[e("li",null,[e("p",null,"最后的 loader 最早调用，将会传入原始资源内容。")]),e("li",null,[e("p",null,"第一个 loader 最后调用，期望值是传出 JavaScript 和 source map（可选）。")]),e("li",null,[e("p",null,"中间的 loader 执行时，会传入前一个 loader 传出的结果。")])],-1),f=e("h2",{id:"plugin",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#plugin","aria-hidden":"true"},"#"),a(" Plugin")],-1),g={href:"https://webpack.docschina.org/concepts/plugins/",target:"_blank",rel:"noopener noreferrer"},m=e("p",null,"插件目的在于解决 loader 无法实现的其他事",-1),w=e("p",null,"Loaders 关注代码中的单个资源，Plugins 关注整体流程，可以接触到 webpack 构建流程中的各个阶段并劫持做一些代码处理。",-1);function x(v,L){const n=l("ExternalLinkIcon");return t(),c("div",null,[d,i,e("p",null,[e("a",p,[a("webpack"),o(n)]),a(" 是一个用于现代 JavaScript 应用程序的 静态模块打包工具。当 webpack 处理应用程序时，它会在内部从一个或多个入口点构建一个 依赖图(dependency graph)，然后将你项目中所需的每一个模块组合成一个或多个 bundles，它们均为静态资源，用于展示你的内容。")]),h,e("p",null,[e("a",_,[a("loader"),o(n)]),a("用于对模块的源代码进行转换。loader 可以使你在 import 或 “load(加载)” 模块时预处理文件。")]),u,b,k,f,e("p",null,[e("a",g,[a("插件"),o(n)]),a(" 是 webpack 的 支柱 功能。Webpack 自身也是构建于你在 webpack 配置中用到的 相同的插件系统 之上！")]),m,w])}const B=r(s,[["render",x],["__file","08.html.vue"]]);export{B as default};
