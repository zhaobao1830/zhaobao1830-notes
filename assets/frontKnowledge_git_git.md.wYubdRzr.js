import{_ as t,o as s,c as a,R as e}from"./chunks/framework.3AywRrgj.js";const b=JSON.parse('{"title":"Git","description":"","frontmatter":{},"headers":[],"relativePath":"frontKnowledge/git/git.md","filePath":"frontKnowledge/git/git.md","lastUpdated":1703819421000}'),i={name:"frontKnowledge/git/git.md"},l=e(`<h1 id="git" tabindex="-1">Git <a class="header-anchor" href="#git" aria-label="Permalink to &quot;Git&quot;">​</a></h1><ul><li><a href="https://git-scm.com/" target="_blank" rel="noreferrer">官网</a></li><li><a href="https://learngitbranching.js.org/?locale=zh_CN" target="_blank" rel="noreferrer">Git 学习教程</a></li><li><a href="https://github.com/git/git" target="_blank" rel="noreferrer">Github地址</a></li><li><a href="https://github.com/git-for-windows/git" target="_blank" rel="noreferrer">Windows 版 Github</a></li><li><a href="https://npm.taobao.org/mirrors/git-for-windows/" target="_blank" rel="noreferrer">Windows 版下载镜像站</a></li><li><a href="https://github.com/maomao1996/daily-notes/issues/7" target="_blank" rel="noreferrer">下载技巧 - 使用 jsdelivr 加速 Github 仓库资源</a></li></ul><h2 id="常用-git-命令" tabindex="-1">常用 Git 命令 <a class="header-anchor" href="#常用-git-命令" aria-label="Permalink to &quot;常用 Git 命令&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">提示</p><p>[xxx] 均为可选参数</p></div><table><thead><tr><th style="text-align:left;">命令</th><th style="text-align:left;">作用</th></tr></thead><tbody><tr><td style="text-align:left;">git clone 仓库地址</td><td style="text-align:left;">下载一个 Git 项目</td></tr><tr><td style="text-align:left;">git config --list</td><td style="text-align:left;">显示当前的 Git 配置</td></tr><tr><td style="text-align:left;">git config [--global] user.name &quot;名称&quot;</td><td style="text-align:left;">设置提交代码时的用户名称</td></tr><tr><td style="text-align:left;">git config [--global] user.email &quot;邮箱&quot;</td><td style="text-align:left;">设置提交代码时的邮箱地址</td></tr><tr><td style="text-align:left;">git add .</td><td style="text-align:left;">添加所有文件到暂存区</td></tr><tr><td style="text-align:left;">git commit -m &quot;提交信息&quot;</td><td style="text-align:left;">提交暂存区到仓库区</td></tr><tr><td style="text-align:left;">git commit --amend -m &quot;提交信息&quot;</td><td style="text-align:left;">替换（无代码改动就重写）上一次 commit 信息</td></tr><tr><td style="text-align:left;">git branch</td><td style="text-align:left;">列出所有本地分支</td></tr><tr><td style="text-align:left;">git branch -r</td><td style="text-align:left;">列出所有远程分支</td></tr><tr><td style="text-align:left;">git branch -a</td><td style="text-align:left;">列出所有本地分支和远程分支</td></tr><tr><td style="text-align:left;">git branch -d 分支名</td><td style="text-align:left;">删除分支</td></tr><tr><td style="text-align:left;">git branch 分支名</td><td style="text-align:left;">新建一个分支，但依然停留在当前分支</td></tr><tr><td style="text-align:left;">git checkout --orphan 分支名</td><td style="text-align:left;">新建一个空白分支</td></tr><tr><td style="text-align:left;">git status</td><td style="text-align:left;">显示变更的文件</td></tr><tr><td style="text-align:left;">git log</td><td style="text-align:left;">显示当前分支的版本历史</td></tr><tr><td style="text-align:left;">git merge 分支名</td><td style="text-align:left;">合并指定分支到当前分支</td></tr><tr><td style="text-align:left;">git remote -v</td><td style="text-align:left;">显示所有远程仓库</td></tr><tr><td style="text-align:left;">git pull [remote][branch]</td><td style="text-align:left;">取回远程仓库的变化，并与本地分支合并</td></tr><tr><td style="text-align:left;">git push [remote][branch]</td><td style="text-align:left;">上传本地指定分支到远程仓库</td></tr><tr><td style="text-align:left;">git push [remote] --force</td><td style="text-align:left;">强行推送当前分支到远程仓库，即使有冲突</td></tr><tr><td style="text-align:left;">git stash</td><td style="text-align:left;">暂时将未提交的变化移除</td></tr><tr><td style="text-align:left;">git stash pop</td><td style="text-align:left;">取出未提交的变化</td></tr></tbody></table><p><a href="./command">查看完整版 Git 命令</a></p><p><a href="https://github.com/521xueweihan/git-tips" target="_blank" rel="noreferrer">git 命令大全 github</a></p><h2 id="commit-常用-type" tabindex="-1">commit 常用 type <a class="header-anchor" href="#commit-常用-type" aria-label="Permalink to &quot;commit 常用 type&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">type</th><th style="text-align:left;">含义</th></tr></thead><tbody><tr><td style="text-align:left;">feat</td><td style="text-align:left;">新功能</td></tr><tr><td style="text-align:left;">fix</td><td style="text-align:left;">修复 bug</td></tr><tr><td style="text-align:left;">docs</td><td style="text-align:left;">修改文档</td></tr><tr><td style="text-align:left;">style</td><td style="text-align:left;">代码格式修改</td></tr><tr><td style="text-align:left;">refactor</td><td style="text-align:left;">重构（即不是新增功能，也不是修复 bug）</td></tr><tr><td style="text-align:left;">perf</td><td style="text-align:left;">更改代码以提高性能</td></tr><tr><td style="text-align:left;">test</td><td style="text-align:left;">增加测试</td></tr><tr><td style="text-align:left;">build</td><td style="text-align:left;">构建过程或辅助工具的变动</td></tr><tr><td style="text-align:left;">ci</td><td style="text-align:left;">修改项目持续集成流程</td></tr><tr><td style="text-align:left;">chore</td><td style="text-align:left;">其他类型的提交</td></tr><tr><td style="text-align:left;">revert</td><td style="text-align:left;">恢复上一次提交</td></tr></tbody></table><h2 id="使用-github-actions-自动部署" tabindex="-1">使用 GitHub Actions 自动部署 <a class="header-anchor" href="#使用-github-actions-自动部署" aria-label="Permalink to &quot;使用 GitHub Actions 自动部署&quot;">​</a></h2><p><a href="https://github.com/features/actions" target="_blank" rel="noreferrer">GitHub Actions</a> 是 GitHub 的持续集成服务</p><h3 id="上传项目到github" tabindex="-1">上传项目到gitHub <a class="header-anchor" href="#上传项目到github" aria-label="Permalink to &quot;上传项目到gitHub&quot;">​</a></h3><p>将项目上传到github上</p><h3 id="创建个人访问令牌" tabindex="-1">创建个人访问令牌 <a class="header-anchor" href="#创建个人访问令牌" aria-label="Permalink to &quot;创建个人访问令牌&quot;">​</a></h3><p><a href="https://docs.github.com/cn/github/authenticating-to-github/creating-a-personal-access-token" target="_blank" rel="noreferrer">个人访问令牌创建地址</a></p><h3 id="配置-secrets" tabindex="-1">配置 Secrets <a class="header-anchor" href="#配置-secrets" aria-label="Permalink to &quot;配置 Secrets&quot;">​</a></h3><blockquote><p>Action 需要有操作仓库的权限</p></blockquote><p>1、打开第一步上传的项目 2、点击<code>Settings</code>按钮，进入Settings页面 3、点击<code>Secrets</code>按钮 4、点击<code>New repository secret</code>按钮</p><p>name为<code>ACCESS_TOKEN</code>，值为上面创建的个人访问令牌</p><h3 id="编写-workflow-文件" tabindex="-1">编写 <code>workflow</code> 文件 <a class="header-anchor" href="#编写-workflow-文件" aria-label="Permalink to &quot;编写 \`workflow\` 文件&quot;">​</a></h3><p>1、点击<code>Actions</code>按钮，进入Actions页面 2、点击 <code>Set up a workflow yourself</code> 按钮 3、复制如下内容</p><div class="language-yml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GitHub Actions Build and Deploy</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 触发条件: push 到 master 分支后</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    branches</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">master</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 任务</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">jobs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  build-and-deploy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 服务器环境：最新版 ubuntu</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    runs-on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ubuntu-latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    steps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 拉取代码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Checkout</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actions/checkout@v2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          persist-credentials</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 打包静态文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Build</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">npm install &amp;&amp; npm run build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 部署</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Deploy</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">JamesIves/github-pages-deploy-action@releases/v3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          # GitHub 密钥</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          ACCESS_TOKEN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${{ secrets.ACCESS_TOKEN }}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          # GitHub Pages 读取的分支</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          BRANCH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">gh-pages</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          # 静态文件所在目录</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          FOLDER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">dist</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>yml里的内容直接复制就可以，需要注意的是打包静态文件里的<code>npm run build</code>指令，要和当前项目 package.json文件里打包指令一致，默认指令为<code>docs:build</code></p></div><p>详细教程可以参考阮一峰老师的<a href="http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html" target="_blank" rel="noreferrer">GitHub Actions 入门教程</a></p><p><a href="https://docs.github.com/cn/actions/reference" target="_blank" rel="noreferrer">GitHub Actions 中文文档</a></p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>项目部署以后，打开页面是空白，提示样式找不到，这是<code>config.js</code>里的<code>base</code>属性配置错误, base的值要和路径一致, 比如我的项目地址是<a href="https://zhaobao1830.github.io/zhaobao1830-notes/%EF%BC%8C%E9%82%A3base%E7%9A%84%E5%80%BC%E5%B0%B1%E6%98%AF/zhaobao1830-notes/" target="_blank" rel="noreferrer">https://zhaobao1830.github.io/zhaobao1830-notes/，那base的值就是/zhaobao1830-notes/</a></p></div>`,26),n=[l];function r(p,h,d,g,o,k){return s(),a("div",null,n)}const y=t(i,[["render",r]]);export{b as __pageData,y as default};
