import{_ as t,M as o,p,q as c,R as n,t as a,N as e,a1 as r}from"./framework-b7c41258.js";const i={},l=r(`<h1 id="js中0-1-0-2为什么不等于0-3" tabindex="-1"><a class="header-anchor" href="#js中0-1-0-2为什么不等于0-3" aria-hidden="true">#</a> JS中0.1+0.2为什么不等于0.3</h1><p>原因在于JS采用IEEE754标准定义的64位浮点格式表示数字，所以JS中的所有数字都是浮点数，而且是一个近似值，相加的时候得出的也是近似值</p><p>解决办法：</p><p>第一种、</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">备注</p><p>toFixed方法将字符串四舍五入为指定的小数位数。</p><p>parseFloat解析字符串，返回浮点数</p></div><p>第二种：</p>`,7),u={href:"https://mikemcl.github.io/big.js/#",target:"_blank",rel:"noopener noreferrer"},d={href:"https://mathjs.org/index.html",target:"_blank",rel:"noopener noreferrer"};function _(m,h){const s=o("ExternalLinkIcon");return p(),c("div",null,[l,n("p",null,[n("a",u,[a("big.js"),e(s)]),a("或者"),n("a",d,[a("mathjs"),e(s)])])])}const f=t(i,[["render",_],["__file","16.html.vue"]]);export{f as default};
