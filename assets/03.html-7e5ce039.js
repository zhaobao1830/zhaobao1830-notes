import{_ as p,M as a,p as s,q as n,R as e,t as o,N as c,a1 as r}from"./framework-b7c41258.js";const i={},d=e("h1",{id:"自定义hooks",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#自定义hooks","aria-hidden":"true"},"#"),o(" 自定义hooks")],-1),h={href:"https://cn.vuejs.org/guide/extras/composition-api-faq.html#what-is-composition-api",target:"_blank",rel:"noopener noreferrer"},_=r("<p>可以将相关的feature组合在一起</p><p>易于重用</p><p>优势：</p><p>1、以函数的形式调用，清楚的了解参数和返回的类型</p><p>2、避免命名冲突</p><p>3、代码逻辑脱离组件存在</p><p>4、泛型在函数中的使用</p><p>5、与react hooks相比</p><p>（1）、仅在 <code>setup()</code> 或 <code>&lt;script setup&gt;</code> 调用一次，而且不用担心闭包变量的问题</p><p>（2）、不限制调用顺序，可以有条件的进行调用</p><p>（3）、Vue 的响应性系统运行时会自动收集计算属性和侦听器的依赖，因此无需手动声明依赖</p><p>（4）、无需手动缓存回调函数来避免不必要的组件更新。Vue 细粒度的响应性系统能够确保在绝大部分情况下组件仅执行必要的更新。对 Vue 开发者来说几乎不怎么需要对子组件更新进行手动优化。</p>",12);function l(u,m){const t=a("ExternalLinkIcon");return s(),n("div",null,[d,e("p",null,[o("官网地址："),e("a",h,[o("https://cn.vuejs.org/guide/extras/composition-api-faq.html#what-is-composition-api"),c(t)])]),_])}const k=p(i,[["render",l],["__file","03.html.vue"]]);export{k as default};
