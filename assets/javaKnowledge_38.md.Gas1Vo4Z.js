import{_ as t,o as p,c as d,R as e}from"./chunks/framework.1nBpG9uI.js";const I=JSON.parse('{"title":"OSI 网络模型","description":"","frontmatter":{},"headers":[],"relativePath":"javaKnowledge/38.md","filePath":"javaKnowledge/38.md","lastUpdated":1720409829000}'),r={name:"javaKnowledge/38.md"},o=e('<h1 id="osi-网络模型" tabindex="-1">OSI 网络模型 <a class="header-anchor" href="#osi-网络模型" aria-label="Permalink to &quot;OSI 网络模型&quot;">​</a></h1><p>网络模型就是 OSI（Open System Interconnect），意思为开放网络互联，是由国际标准化组织(ISO)和国际电报电话咨询委员会(CCITT)共同出版的，它是一种网络互联模型，也是一种规范。</p><p>网络模型分为七层，也就是当用户发起请求到服务器接收，会历经七道工序，或者说用户利用互联网发送消息给另一个用户，也会历经七道工序。这七层可以分为如下：</p><table><thead><tr><th>层级</th><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>第七层</td><td>应用层</td><td>与用户行为交互</td></tr><tr><td>第六层</td><td>表示层</td><td>定义数据格式以及数据加密</td></tr><tr><td>第五层</td><td>会话层</td><td>创建、管理以及销毁会话</td></tr><tr><td>第四层</td><td>传输层</td><td>创建、管理请求端到响应端（端到端）的连接</td></tr><tr><td>第三层</td><td>网络层</td><td>请求端的IP地址</td></tr><tr><td>第二层</td><td>数据链路层</td><td>提供介质访问与链路管理</td></tr><tr><td>第一层</td><td>物理层</td><td>传输介质，物理媒介</td></tr></tbody></table><p>以上七层每层可以与上下相邻层进行通信</p><p><strong>应用层：</strong></p><p>这是面向用户的，最靠近用户，为了让用户和计算机交互，在计算机里会有很多软件，比如eclipse，idea，qq，nginx等，这些都是应用软件，用户可以通过这些应用软件和计算机交互，交互的过程其实就是接口的调用，应用层为用户提供了交互的接口，以此为用户提供交互服务。</p><p>在这一层最常见的协议有：HTTP,HTTPS,FTP,SMTP,POP3等，<strong>Nginx</strong>在本层，为七层负载均衡。</p><p>举例：我要寄一封信给远在天边的老外LiLei，我会打开快递软件下单，这个时候我是用户，快递软件就是应用服务，是建立在计算机上的，提供给用户交互的一种服务或称之为手段。</p><p><strong>表示层：</strong></p><p>该层提供数据格式编码以及加密功能，确保请求端的数据能被响应端的应用层识别。</p><p>举例：我写中文给LiLei，他看不懂，这个时候我就会使用翻译软件把中文翻译成英文，随后信中涉及到一些比较隐私的信息我会加密一下，这个时候翻译软件和加密器就充当了表示层的作用，它用于显示用户能够识别的内容。</p><p><strong>会话层：</strong></p><p>会话可以理解为session，请求发送到接受响应的这个过程之间存在会话，会话层就充当了这一过程的管理者，从创建会话到维护会话最后销毁会话。</p><p>举例：我每次写信给LiLei都会记录在一个小本本上，寄信时间日期，收信时间日期，这本小本本上存有每次通信记录，这个小本本就相当于是一个会话的管理者。又或者说，我们平时在打电话，首先需要拨打电话，这是建立会话，对方接听电话，此时正在通话（维持并管理会话），通话结束后会话销毁，那么这也是一次会话的生命周期。</p><p><strong>传输层：</strong></p><p>该层建立端到端的连接，他提供了数据传输服务，在传输层通信会涉及到端口号，本层常见的协议为TCP、UDP，<strong>LVS</strong>就是在传输层，也就是四层负载均衡。</p><p>举例：我和LiLei通信过程中会借助快递公司，快递公司会分配快递员取件和寄件，那么这个快递员则充当传输层的作用。</p><p><strong>网络层：</strong></p><p>网络通信的时候必须要有本机IP和对方的IP，请求端和响应端都会有自己的IP的，IP就相当于你家地址门牌号，在网络上云服务器有固定的公网IP，普通计算机也有，只不过是动态IP，运营商每天会分配不同的IP给你的计算机。所以网络层也能称之为IP层，IP是互联网的基础根本。能提供IP分配的设备则为路由器或交换机。</p><p>举例：对于拥有固定IP的云服务来说，他们都是由腾讯云、阿里云等这样的供应商提供的，他们为云服务器提供固定ip；电信、移动、联调等运营商为你的计算机动态分配ip，每天都不同；则这些供应商和运营商都是网络层。同理，快递员由物流公司分配和管理，那么物流公司就是网络层咯。</p><p><strong>数据链路层：</strong></p><p>这一层会提供计算机MAC地址，通信的时候会携带，为了确保请求投递正确，所以它会验证检测MAC地址，以确保请求响应的可靠性。</p><p>举例：快递员在投递派送的时候，他（或客服）会预先提前打电话给你，确认你家地址对不对、有没有人、货到付款有没有准备好钱等等，这个时候快递员（或客服）就充当了数据链路层的职责。</p><p><strong>物理层：</strong></p><p>端到端请求响应过程中的媒介，物理介质，比如网线、中继器等等设备，都是你在端到端交互过程中不可缺少的基础设备。</p><p>举例：快递员在投递的过程中，你写的信会历经一些交通运输工具，比如首先通过飞机运输到国外，在海关统一拿到信以后会通过汽车运输到LiLei所在城市的物流集散地，最后快递员通过三轮电频车寄到LiLei家里，这个时候，飞机、汽车、三轮电瓶车都是物理层的媒介。</p><div class="tip custom-block"><p class="custom-block-title">备注</p><p>Nginx存在于第七层，属于七层负载均衡；</p><p>第四层会有LVS，属于四层负载均衡</p></div>',28),s=[o];function n(a,i,c,_,g,l){return p(),d("div",null,s)}const h=t(r,[["render",n]]);export{I as __pageData,h as default};
