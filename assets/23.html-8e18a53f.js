import{_ as e,p as t,q as s,a1 as o}from"./framework-b7c41258.js";const p="/zhaobao1830-notes/assets/01-a7f66bf7.png",r="/zhaobao1830-notes/assets/02-45429048.png",c="/zhaobao1830-notes/assets/03-812f3ae5.png",a="/zhaobao1830-notes/assets/04-4704f746.png",i={},n=o('<h1 id="vite-internal-server-error-vue-compiler-sfc-defineprops-in-script-setup-cannot-reference-locally-declared-variables-because-it-will-be-hoisted-outside-of-the-setup-function" tabindex="-1"><a class="header-anchor" href="#vite-internal-server-error-vue-compiler-sfc-defineprops-in-script-setup-cannot-reference-locally-declared-variables-because-it-will-be-hoisted-outside-of-the-setup-function" aria-hidden="true">#</a> [vite] Internal server error: [@vue/compiler-sfc] <code>defineProps()</code>in <code>&lt;script setup&gt;</code> cannot reference locally declared variables because it will be hoisted outside of the setup() function.</h1><p><img src="'+p+'" alt="Image text"></p><p><img src="'+r+'" alt="Image text"></p><p>原因：</p><p>当我们使用script setup的时候，其实是编译器帮我们把代码编译回去setup的方法，类似我们在defineComponent里写setup方法，所以setup本身是一个独立的作用域（setup scope）。</p><p>而vue组件本身是一个js文件，也就是script方法里也是一个作用域(module scope)。</p><p>也就是说一个vue组件其实同时具备了两个作用域。</p><p>因此，在defineProps里定义default函数的时候不应该引用setup作用域的变量。</p><p>因为props本身应该是属于module scope，跟setup是同级的</p><p>解决办法:</p><p>第一种：将数据在外面的文件里定义好，直接引入，然后在props里使用</p><p><img src="'+c+'" alt="Image text"></p><p><img src="'+a+'" alt="Image text"></p><p>第二种：在组件里新加一个<code>&lt;script&gt;&lt;/script&gt;</code>标签，在这里面引入方法，生成数据，然后将数据加入props中</p>',14),l=[n];function d(u,f){return t(),s("div",null,l)}const m=e(i,[["render",d],["__file","23.html.vue"]]);export{m as default};
