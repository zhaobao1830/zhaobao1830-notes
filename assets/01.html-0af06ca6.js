import{_ as n,p as e,q as s,a1 as a}from"./framework-b7c41258.js";const t="/zhaobao1830-notes/assets/01-4e1a65d5.png",i={},o=a('<h1 id="window-innerwidth获取可视区域不可靠" tabindex="-1"><a class="header-anchor" href="#window-innerwidth获取可视区域不可靠" aria-hidden="true">#</a> window.innerWidth获取可视区域不可靠</h1><p>在计算当前可视区域宽高的时候，我使用了window.innerWidth和dom.clientWidth，发现这俩的值有时候一样，有时候不一样，尤其是在浏览器审查元素的时候， window.innerWidth的值特别奇怪</p><p><img src="'+t+`" alt="Image text"></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token keyword">const</span> dom <span class="token operator">=</span> largeScreenConRef<span class="token punctuation">.</span>value
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dom<span class="token punctuation">.</span>clientWidth<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以推荐要获取当前页面的可视区域：</p><p>1、可以设定最外层的div宽高为100%，然后通过dom.clientWidth获取</p><p>2、window.screen包含可视区域的宽高等信息</p><p>3、document.documentElement.clientWidth和document.documentElement.clientHeight</p>`,8),c=[o];function p(d,l){return e(),s("div",null,c)}const u=n(i,[["render",p],["__file","01.html.vue"]]);export{u as default};
