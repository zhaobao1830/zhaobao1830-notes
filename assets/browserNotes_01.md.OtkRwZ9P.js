import{_ as s,o as i,c as n,R as e}from"./chunks/framework.1nBpG9uI.js";const a="/zhaobao1830-notes/assets/01.NXrsKgW0.png",g=JSON.parse('{"title":"window.innerWidth获取可视区域不可靠","description":"","frontmatter":{},"headers":[],"relativePath":"browserNotes/01.md","filePath":"browserNotes/01.md","lastUpdated":1716451134000}'),t={name:"browserNotes/01.md"},d=e('<h1 id="window-innerwidth获取可视区域不可靠" tabindex="-1">window.innerWidth获取可视区域不可靠 <a class="header-anchor" href="#window-innerwidth获取可视区域不可靠" aria-label="Permalink to &quot;window.innerWidth获取可视区域不可靠&quot;">​</a></h1><p>在计算当前可视区域宽高的时候，我使用了window.innerWidth和dom.clientWidth，发现这俩的值有时候一样，有时候不一样，尤其是在浏览器审查元素的时候， window.innerWidth的值特别奇怪</p><p><img src="'+a+`" alt="Image text"></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dom</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> largeScreenConRef.value</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dom.clientWidth)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(window.innerWidth)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>所以推荐要获取当前页面的可视区域：</p><p>1、可以设定最外层的div宽高为100%，然后通过dom.clientWidth获取</p><p>2、window.screen包含可视区域的宽高等信息</p><p>3、document.documentElement.clientWidth和document.documentElement.clientHeight</p>`,8),l=[d];function o(p,r,h,c,k,m){return i(),n("div",null,l)}const w=s(t,[["render",o]]);export{g as __pageData,w as default};
