import{_ as t,p as s,q as o,a1 as r}from"./framework-b7c41258.js";const e={},c=r('<h1 id="postconstruct注解" tabindex="-1"><a class="header-anchor" href="#postconstruct注解" aria-hidden="true">#</a> @PostConstruct注解</h1><p>该注解可以实现在运行工程时，自动运行该注解下的方法；</p><p>@PostConstruct是Java5的时候引入的注解，指的是在项目启动的时候执行这个方法，也可以理解为在spring容器启动的时候执行，可作为一些数据的常规化加载，比如数据字典之类的。</p><p>被@PostConstruct修饰的方法会在服务器加载Servle的时候运行，并且只会被服务器执行一次。</p><p>PostConstruct在构造函数之后执行，加载顺序：</p><p>服务器加载servlet-&gt;servlet构造函数的加载-&gt;PostConstruct-&gt;init（init是在servlet中的初始化方法.创建service时发生的事件）</p><p>-&gt;Service-&gt;destroy-&gt;predestroy-&gt;服务器卸载servlet;</p><p><strong>问题：spring中Constructor、@Autowired、@PostConstruct的顺序</strong></p><p>Constructor -&gt; @Autowired -&gt; @PostConstruct</p><p>适用场景：</p><p>如果想在生成对象时候完成某些初始化操作，而偏偏这些初始化操作又依赖于依赖注入，那么就无法在构造函数中实现。为此，可以使用@PostConstruct注解一个方法来完成初始化，@PostConstruct注解的方法将会在依赖注入完成后被自动调用。</p>',11),n=[c];function p(a,i){return s(),o("div",null,n)}const _=t(e,[["render",p],["__file","24.html.vue"]]);export{_ as default};
